{"version":3,"sources":["webpack:///./src/templates/List.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/SEO/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","blogListQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","components_Layout__WEBPACK_IMPORTED_MODULE_2__","components_SEO__WEBPACK_IMPORTED_MODULE_3__","List","_ref","_ref$data","data","_ref$data$site$siteMe","site","siteMetadata","siteUrl","owner","posts","allMarkdownRemark","edges","a","createElement","title","url","author","map","_ref2","node","key","fields","slug","frontmatter","propTypes","PropTypes","shape","string","isRequired","name","email","arrayOf","graphql","StaticQueryContext","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","gatsby_browser_entry","to","defaultProps","Layout","Fragment","components_Header","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","_755544856","SEO","description","keywords","locale","image","Helmet_default","htmlAttributes","lang","slice","content","join","property"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,kCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAOMY,EAAO,SAAAC,GAAA,IAAAC,EAAAD,EACXE,KADWC,EAAAF,EAETG,KACEC,aACEC,EAJKH,EAILG,QACAC,EALKJ,EAKLI,MAIKC,EATAP,EAQTQ,kBACEC,MATO,OAaXjB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,KACEJ,EAAAkB,EAAAC,cAACd,EAAA,EAAD,CACEe,MAAM,aACNC,IAAKR,EACLS,OAAQR,IAETC,EAAMQ,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTzB,EAAAkB,EAAAC,cAAA,OAAKO,IAAKD,EAAKE,OAAOC,MACnBH,EAAKI,YAAYT,OAASK,EAAKE,OAAOC,UAM/CtB,EAAKwB,UAAY,CACfrB,KAAMsB,IAAUC,MAAM,CACpBrB,KAAMoB,IAAUC,MAAM,CACpBpB,aAAcmB,IAAUC,MAAM,CAC5BnB,QAASkB,IAAUE,OAAOC,WAC1Bd,MAAOW,IAAUE,OACjBnB,MAAOiB,IAAUC,MAAM,CACrBG,KAAMJ,IAAUE,OAChBG,MAAOL,IAAUE,SAChBC,aACFA,aACFA,WACHlB,kBAAmBe,IAAUC,MAAM,CACjCf,MAAOc,IAAUM,QAAQN,IAAUC,MAAM,CACvCH,YAAaE,IAAUC,MAAM,CAC3BZ,MAAOW,IAAUE,SAChBC,WACHP,OAAQI,IAAUC,MAAM,CACtBJ,KAAMG,IAAUE,SACfC,cACDA,aACHA,aACFA,YAGE,IAAMpC,EAAa,aAgCXQ,8CC3FfZ,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAA0C,IAAA5C,EAAAG,EAAAD,EAAA,uCAAA2C,IAAA7C,EAAAG,EAAAD,EAAA,gCAAA4C,IAAA,IAAAzC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAuC,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAAO,EAAAwC,GAAA/C,EAAAG,EAAAD,EAAA,yBAAA8C,EAAAxB,IAAAxB,EAAAG,EAAAD,EAAA,+BAAA6C,EAAA,aAAA/C,EAAAG,EAAAD,EAAA,6BAAA6C,EAAA,WAAA/C,EAAAG,EAAAD,EAAA,yBAAA6C,EAAA,OAAA/C,EAAAG,EAAAD,EAAA,4BAAA6C,EAAA,UAAA/C,EAAAG,EAAAD,EAAA,+BAAA6C,EAAA,iBAAAE,EAAAjD,EAAA,KAAAkD,EAAAlD,EAAAO,EAAA0C,GAAAjD,EAAAG,EAAAD,EAAA,iCAAAgD,EAAA1B,IAAA,IAAA2B,EAAAnD,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAiD,EAAA,IAYA,IAAMN,EAAqBO,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBhD,EAAAkB,EAAAC,cAACoB,EAAmBU,SAApB,KACG,SAAAC,GACC,OACEF,EAAMvC,MACLyC,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAO1C,MAEtDuC,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMvC,KAAOuC,EAAMvC,KAAKA,KAAOyC,EAAgBF,EAAMG,OAAO1C,MAGvDT,EAAAkB,EAAAC,cAAA,uCAaf,SAASmB,IACP,MAAM,IAAIgB,MACR,gVATJd,EAAYV,UAAY,CACtBrB,KAAMsB,IAAUwB,OAChBJ,MAAOpB,IAAUE,OAAOC,WACxBkB,OAAQrB,IAAUyB,KAClBH,SAAUtB,IAAUyB,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qLCMzCK,EAAmB,SAAAvD,GAAkB,IAAfwD,EAAexD,EAAfwD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOrB,IAAM3B,cAAciD,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBhC,UAAY,CAC3BiC,SAAUhC,IAAUC,MAAM,CACxBmC,SAAUpC,IAAUE,OAAOC,aAC1BA,YAGU4B,0HCjBTU,EAAS,SAAAjE,GAAA,IAAGkE,EAAHlE,EAAGkE,UAAH,OACbC,EAAAxD,EAAAC,cAAA,WACEuD,EAAAxD,EAAAC,cAAA,UACEuD,EAAAxD,EAAAC,cAACwD,EAAA,KAAD,CAAMC,GAAG,KACNH,MAMTD,EAAO1C,UAAY,CACjB2C,UAAW1C,IAAUE,QAGvBuC,EAAOK,aAAe,CACpBJ,UAAW,IAGED,ICpBAA,EDoBAA,EEfTM,UAAS,SAAAvE,GAAA,IAAG8C,EAAH9C,EAAG8C,SAAH,OACbqB,EAAAxD,EAAAC,cAACwD,EAAA,YAAD,CACExB,MAAK,YASLC,OAAQ,SAAA3C,GAAI,OACViE,EAAAxD,EAAAC,cAAAuD,EAAAxD,EAAA6D,SAAA,KACEL,EAAAxD,EAAAC,cAAC6D,EAAD,CAAQP,UAAWhE,EAAKE,KAAKC,aAAaQ,QAC1CsD,EAAAxD,EAAAC,cAAA,OACE8D,MAAO,CACLC,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTC,WAAY,IAGbhC,EACDqB,EAAAxD,EAAAC,cAAA,oBACQ,IAAImE,MAAOC,cADnB,gBAEEb,EAAAxD,EAAAC,cAAA,KAAGqE,KAAK,4BAAR,cAxBV/E,KAAAgF,MAgCFX,EAAOhD,UAAY,CACjBuB,SAAUtB,IAAUN,KAAKS,YAGZ4C,QC1CAA,qGCETY,EAAM,SAAAnF,GAAA,IACVc,EADUd,EACVc,IACAD,EAFUb,EAEVa,MACAuE,EAHUpF,EAGVoF,YACArE,EAJUf,EAIVe,OACAsE,EALUrF,EAKVqF,SACAC,EANUtF,EAMVsF,OACAC,EAPUvF,EAOVuF,MAPU,OASVpB,EAAAxD,EAAAC,cAAC4E,EAAA7E,EAAD,CACE8E,eAAgB,CAAEC,KAAMJ,EAAOK,MAAM,EAAG,KAExCxB,EAAAxD,EAAAC,cAAA,aAAQC,GACRsD,EAAAxD,EAAAC,cAAA,QAAMgB,KAAK,cAAcgE,QAASR,IAClCjB,EAAAxD,EAAAC,cAAA,QAAMgB,KAAK,SAASgE,QAAY7E,EAAOa,KAAZ,KAAqBb,EAAOc,MAA5B,MAC3BsC,EAAAxD,EAAAC,cAAA,QAAMgB,KAAK,WAAWgE,QAASP,EAASQ,KAAK,QAG7C1B,EAAAxD,EAAAC,cAAA,QAAMkF,SAAS,YAAYF,QAASN,IACpCnB,EAAAxD,EAAAC,cAAA,QAAMkF,SAAS,SAASF,QAAS9E,IACjCqD,EAAAxD,EAAAC,cAAA,QAAMkF,SAAS,WAAWF,QAAS/E,IACnCsD,EAAAxD,EAAAC,cAAA,QAAMkF,SAAS,UAAUF,QAAQ,YACjCzB,EAAAxD,EAAAC,cAAA,QAAMkF,SAAS,iBAAiBF,QAASR,IACxCG,GAASpB,EAAAxD,EAAAC,cAAA,QAAMkF,SAAS,WAAWF,QAASL,IAG7CpB,EAAAxD,EAAAC,cAAA,QAAMgB,KAAK,eAAegE,QAAQ,YAClCzB,EAAAxD,EAAAC,cAAA,QAAMgB,KAAK,cAAcgE,QAAS9E,IAClCqD,EAAAxD,EAAAC,cAAA,QAAMgB,KAAK,gBAAgBgE,QAAS/E,IACpCsD,EAAAxD,EAAAC,cAAA,QAAMgB,KAAK,sBAAsBgE,QAASR,IAC1CjB,EAAAxD,EAAAC,cAAA,QAAMgB,KAAK,kBAAkBgE,QAAY7E,EAAOa,KAAZ,KAAqBb,EAAOc,MAA5B,MACnC0D,GAASpB,EAAAxD,EAAAC,cAAA,QAAMkF,SAAS,gBAAgBF,QAASL,MAItDJ,EAAIb,aAAe,CACjBc,YAAa,GACbC,SAAU,GACVE,MAAO,GACPD,OAAQ,SAGVH,EAAI5D,UAAY,CACdT,IAAKU,IAAUE,OAAOC,WACtBd,MAAOW,IAAUE,OAAOC,WACxBZ,OAAQS,IAAUC,MAAM,CACtBG,KAAMJ,IAAUE,OAAOC,WACvBE,MAAOL,IAAUE,OAAOC,aACvBA,WAEHyD,YAAa5D,IAAUE,OACvB6D,MAAO/D,IAAUE,OACjB4D,OAAQ9D,IAAUE,OAClB2D,SAAU7D,IAAUM,QAAQN,IAAUE,SAGzByD,QC1DAA","file":"component---src-templates-list-jsx-3bcf44c28a1d5c575025.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\n\nconst List = ({\n  data: {\n    site: {\n      siteMetadata: {\n        siteUrl,\n        owner,\n      },\n    },\n    allMarkdownRemark: {\n      edges: posts,\n    },\n  },\n}) => (\n  <Layout>\n    <SEO\n      title='Posts List'\n      url={siteUrl}\n      author={owner}\n    />\n    {posts.map(({ node }) => (\n      <div key={node.fields.slug}>\n        {node.frontmatter.title || node.fields.slug}\n      </div>\n    ))}\n  </Layout>\n);\n\nList.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        siteUrl: PropTypes.string.isRequired,\n        title: PropTypes.string,\n        owner: PropTypes.shape({\n          name: PropTypes.string,\n          email: PropTypes.string,\n        }).isRequired,\n      }).isRequired,\n    }).isRequired,\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string,\n        }).isRequired,\n        fields: PropTypes.shape({\n          slug: PropTypes.string,\n        }).isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n        owner {\n          name\n          email\n        }\n      }\n    }\n\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default List;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <h1>\n      <Link to='/'>\n        {siteTitle}\n      </Link>\n    </h1>\n  </div>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from 'components/Header';\nimport './Layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            {`© ${new Date().getFullYear()}, Built with `}\n            <a href='https://www.gatsbyjs.org'>Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nconst SEO = ({\n  url,\n  title,\n  description,\n  author,\n  keywords,\n  locale,\n  image,\n}) => (\n  <Helmet\n    htmlAttributes={{ lang: locale.slice(0, 2) }}\n  >\n    <title>{title}</title>\n    <meta name='description' content={description} />\n    <meta name='author' content={`${author.name} <${author.email}>`} />\n    <meta name='keywords' content={keywords.join(', ')} />\n\n    {/* OpenGraph Tags */}\n    <meta property='og:locale' content={locale} />\n    <meta property='og:url' content={url} />\n    <meta property='og:title' content={title} />\n    <meta property='og:type' content='website' />\n    <meta property='og:description' content={description} />\n    {image && <meta property='og:image' content={image} />}\n\n    {/* Twitter Card Tags */}\n    <meta name='twitter:card' content='summary' />\n    <meta name='twitter:url' content={url} />\n    <meta name='twitter:title' content={title} />\n    <meta name='twitter:description' content={description} />\n    <meta name='twitter:creator' content={`${author.name} <${author.email}>`} />\n    {image && <meta property='twitter:image' content={image} />}\n  </Helmet>\n);\n\nSEO.defaultProps = {\n  description: '',\n  keywords: [],\n  image: '',\n  locale: 'ko_KR',\n};\n\nSEO.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n\n  description: PropTypes.string,\n  image: PropTypes.string,\n  locale: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default SEO;\n","import SEO from './SEO';\n\nexport default SEO;\n"],"sourceRoot":""}
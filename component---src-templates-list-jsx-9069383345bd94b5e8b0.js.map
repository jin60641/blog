{"version":3,"sources":["webpack:///./src/templates/List.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/Header/index.js","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/SEO/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","blogListQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","components_Layout__WEBPACK_IMPORTED_MODULE_3__","components_SEO__WEBPACK_IMPORTED_MODULE_4__","List","_ref","_ref$data","data","_ref$data$site$siteMe","site","siteMetadata","siteUrl","owner","posts","allMarkdownRemark","edges","a","createElement","title","url","author","map","_ref2","_ref2$node","node","slug","fields","frontmatter","excerpt","Fragment","key","to","propTypes","PropTypes","shape","string","isRequired","name","email","arrayOf","graphql","StaticQueryContext","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","gatsby_browser_entry","defaultProps","Footer","Date","getFullYear","href","Layout","components_Header","components_Footer","_755544856","SEO","description","keywords","locale","image","Helmet_default","htmlAttributes","lang","slice","content","join","property"],"mappings":"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","file":"component---src-templates-list-jsx-9069383345bd94b5e8b0.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\n\nconst List = ({\n  data: {\n    site: {\n      siteMetadata: {\n        siteUrl,\n        owner,\n      },\n    },\n    allMarkdownRemark: {\n      edges: posts,\n    },\n  },\n}) => (\n  <Layout>\n    <SEO\n      title='Posts List'\n      url={siteUrl}\n      author={owner}\n    />\n    {posts.map(({\n      node: {\n        fields: {\n          slug,\n        },\n        frontmatter: {\n          title,\n        },\n        excerpt,\n      },\n    }) => (\n      <>\n        <Link\n          key={slug}\n          to={`/post${slug}`}\n        >\n          <h2>\n            {title || slug}\n          </h2>\n          <p>\n            {' '}\n            {excerpt}\n            {' '}\n          </p>\n        </Link>\n        <hr />\n      </>\n    ))}\n  </Layout>\n);\n\nList.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        siteUrl: PropTypes.string.isRequired,\n        title: PropTypes.string,\n        owner: PropTypes.shape({\n          name: PropTypes.string,\n          email: PropTypes.string,\n        }).isRequired,\n      }).isRequired,\n    }).isRequired,\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        excerpt: PropTypes.string.isRequired,\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string,\n        }).isRequired,\n        fields: PropTypes.shape({\n          slug: PropTypes.string,\n        }).isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n        owner {\n          name\n          email\n        }\n      }\n    }\n\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            image\n            date(formatString: \"YYYY년 M월 D일\")\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default List;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <nav>\n      <h1>\n        <Link to='/'>\n          {siteTitle}\n        </Link>\n      </h1>\n      <div>\n        <Link to='/page/1'> blog </Link>\n        <Link to='/resume'> resume </Link>\n      </div>\n    </nav>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import Footer from './Footer';\n\nexport default Footer;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer>\n    <span>\n©\n      {new Date().getFullYear()}\n    </span>\n    <span>\nBuilt with\n      <a href='https://www.gatsbyjs.org'>Gatsby</a>\n    </span>\n    <span>\nSource code on\n      <a href='https://github.com/jin60641/blog'>GitHub</a>\n    </span>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\n\nimport './Layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        {children}\n        <Footer />\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nconst SEO = ({\n  url,\n  title,\n  description,\n  author,\n  keywords,\n  locale,\n  image,\n}) => (\n  <Helmet\n    htmlAttributes={{ lang: locale.slice(0, 2) }}\n  >\n    <title>{title}</title>\n    <meta name='description' content={description} />\n    <meta name='author' content={`${author.name} <${author.email}>`} />\n    <meta name='keywords' content={keywords.join(', ')} />\n\n    {/* OpenGraph Tags */}\n    <meta property='og:locale' content={locale} />\n    <meta property='og:url' content={url} />\n    <meta property='og:title' content={title} />\n    <meta property='og:type' content='website' />\n    <meta property='og:description' content={description} />\n    {image && <meta property='og:image' content={image} />}\n\n    {/* Twitter Card Tags */}\n    <meta name='twitter:card' content='summary' />\n    <meta name='twitter:url' content={url} />\n    <meta name='twitter:title' content={title} />\n    <meta name='twitter:description' content={description} />\n    <meta name='twitter:creator' content={`${author.name} <${author.email}>`} />\n    {image && <meta property='twitter:image' content={image} />}\n  </Helmet>\n);\n\nSEO.defaultProps = {\n  description: '',\n  keywords: [],\n  image: '',\n  locale: 'ko_KR',\n};\n\nSEO.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n\n  description: PropTypes.string,\n  image: PropTypes.string,\n  locale: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default SEO;\n","import SEO from './SEO';\n\nexport default SEO;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/SEO/index.js"],"names":["IndexPage","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","_ref","_ref$site$siteMetadat","site","siteMetadata","siteUrl","owner","components_Layout__WEBPACK_IMPORTED_MODULE_3__","components_SEO__WEBPACK_IMPORTED_MODULE_4__","title","url","author","data","_public_static_d_4258743871_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","gatsby_browser_entry","to","defaultProps","Layout","Fragment","components_Header","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","_755544856","node","SEO","description","keywords","locale","image","Helmet_default","htmlAttributes","lang","slice","name","content","email","join","property","arrayOf"],"mappings":"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","file":"component---src-pages-index-jsx-0b73699b98924e102b3d.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n      query IndexQuery {\n        site {\n          siteMetadata {\n            siteUrl\n            owner {\n              name\n              email\n            }\n          }\n        }\n      }\n    `}\n    render={({\n      site: {\n        siteMetadata: {\n          siteUrl,\n          owner,\n        },\n      },\n    }) => (\n      <Layout>\n        <SEO\n          title='Home'\n          url={siteUrl}\n          author={owner}\n        />\n        <h1>Hi people</h1>\n        <p>Welcome to your new Gatsby site.</p>\n        <p>Now go build something great.</p>\n      </Layout>\n    )}\n  />\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <h1>\n      <Link to='/'>\n        {siteTitle}\n      </Link>\n    </h1>\n  </div>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from 'components/Header';\nimport './Layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            {`© ${new Date().getFullYear()}, Built with `}\n            <a href='https://www.gatsbyjs.org'>Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nconst SEO = ({\n  url,\n  title,\n  description,\n  author,\n  keywords,\n  locale,\n  image,\n}) => (\n  <Helmet\n    htmlAttributes={{ lang: locale.slice(0, 2) }}\n  >\n    <title>{title}</title>\n    <meta name='description' content={description} />\n    <meta name='author' content={`${author.name} <${author.email}>`} />\n    <meta name='keywords' content={keywords.join(', ')} />\n\n    {/* OpenGraph Tags */}\n    <meta property='og:locale' content={locale} />\n    <meta property='og:url' content={url} />\n    <meta property='og:title' content={title} />\n    <meta property='og:type' content='website' />\n    <meta property='og:description' content={description} />\n    {image && <meta property='og:image' content={image} />}\n\n    {/* Twitter Card Tags */}\n    <meta name='twitter:card' content='summary' />\n    <meta name='twitter:url' content={url} />\n    <meta name='twitter:title' content={title} />\n    <meta name='twitter:description' content={description} />\n    <meta name='twitter:creator' content={`${author.name} <${author.email}>`} />\n    {image && <meta property='twitter:image' content={image} />}\n  </Helmet>\n);\n\nSEO.defaultProps = {\n  description: '',\n  keywords: [],\n  image: '',\n  locale: 'ko_KR',\n};\n\nSEO.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n\n  description: PropTypes.string,\n  image: PropTypes.string,\n  locale: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default SEO;\n","import SEO from './SEO';\n\nexport default SEO;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/templates/Detail.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/Layout.jsx","webpack:///./src/components/Layout/index.js","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/SEO/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","components_Layout__WEBPACK_IMPORTED_MODULE_2__","components_SEO__WEBPACK_IMPORTED_MODULE_3__","Detail","_ref","_ref$data","data","_ref$data$site$siteMe","site","siteMetadata","siteUrl","title","owner","_ref$data$markdownRem","markdownRemark","frontmatter","html","excerpt","a","createElement","url","description","author","keywords","image","date","dangerouslySetInnerHTML","__html","propTypes","PropTypes","shape","string","isRequired","name","email","graphql","StaticQueryContext","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","gatsby_browser_entry","to","defaultProps","Layout","Fragment","components_Header","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","_755544856","node","SEO","locale","Helmet_default","htmlAttributes","lang","slice","content","join","property","arrayOf"],"mappings":"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","file":"component---src-templates-detail-jsx-982adaf77a624f35388b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\n\nconst Detail = ({\n  data: {\n    site: {\n      siteMetadata: {\n        siteUrl,\n        title,\n        owner,\n      },\n    },\n    markdownRemark: {\n      frontmatter,\n      html,\n      excerpt,\n    },\n  },\n}) => (\n  <Layout>\n    <SEO\n      url={siteUrl}\n      title={`${title} - ${frontmatter.title}`}\n      description={excerpt}\n      author={owner}\n      keywords={['gatsby', 'application', 'react']}\n      image={frontmatter.image}\n    />\n    <section>\n      <h1>{frontmatter.title}</h1>\n      <h2>{frontmatter.date}</h2>\n    </section>\n    <article dangerouslySetInnerHTML={{ __html: html }} />\n  </Layout>\n);\n\nDetail.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        siteUrl: PropTypes.string.isRequired,\n        title: PropTypes.string,\n        owner: PropTypes.shape({\n          name: PropTypes.string,\n          email: PropTypes.string,\n        }).isRequired,\n      }).isRequired,\n    }).isRequired,\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        image: PropTypes.string,\n        date: PropTypes.string,\n      }).isRequired,\n      excerpt: PropTypes.string.isRequired,\n      html: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n        owner {\n          name\n          email\n        }\n      }\n    }\n\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        image\n        date(formatString: \"YYYY년 M월 D일\")\n      }\n    }\n  }\n`;\n\nexport default Detail;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <h1>\n      <Link to='/'>\n        {siteTitle}\n      </Link>\n    </h1>\n  </div>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from 'components/Header';\nimport './Layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            {`© ${new Date().getFullYear()}, Built with `}\n            <a href='https://www.gatsbyjs.org'>Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nconst SEO = ({\n  url,\n  title,\n  description,\n  author,\n  keywords,\n  locale,\n  image,\n}) => (\n  <Helmet\n    htmlAttributes={{ lang: locale.slice(0, 2) }}\n  >\n    <title>{title}</title>\n    <meta name='description' content={description} />\n    <meta name='author' content={`${author.name} <${author.email}>`} />\n    <meta name='keywords' content={keywords.join(', ')} />\n\n    {/* OpenGraph Tags */}\n    <meta property='og:locale' content={locale} />\n    <meta property='og:url' content={url} />\n    <meta property='og:title' content={title} />\n    <meta property='og:type' content='website' />\n    <meta property='og:description' content={description} />\n    {image && <meta property='og:image' content={image} />}\n\n    {/* Twitter Card Tags */}\n    <meta name='twitter:card' content='summary' />\n    <meta name='twitter:url' content={url} />\n    <meta name='twitter:title' content={title} />\n    <meta name='twitter:description' content={description} />\n    <meta name='twitter:creator' content={`${author.name} <${author.email}>`} />\n    {image && <meta property='twitter:image' content={image} />}\n  </Helmet>\n);\n\nSEO.defaultProps = {\n  description: '',\n  keywords: [],\n  image: '',\n  locale: 'ko_KR',\n};\n\nSEO.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n\n  description: PropTypes.string,\n  image: PropTypes.string,\n  locale: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default SEO;\n","import SEO from './SEO';\n\nexport default SEO;\n"],"sourceRoot":""}